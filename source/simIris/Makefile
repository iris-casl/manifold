# Makefile.in generated by automake 1.9.6 from Makefile.am.
# source/simIris/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.




srcdir = .
top_srcdir = ../..

pkgdatadir = $(datadir)/Iris
pkglibdir = $(libdir)/Iris
pkgincludedir = $(includedir)/Iris
top_builddir = ../..
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = /usr/bin/install -c
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
subdir = source/simIris
DIST_COMMON = README $(noinst_HEADERS) $(srcdir)/Makefile.am \
	$(srcdir)/Makefile.in AUTHORS COPYING ChangeLog INSTALL NEWS
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = `echo $$p | sed -e 's|^.*/||'`;
am__installdirs = "$(DESTDIR)$(libdir)"
libLIBRARIES_INSTALL = $(INSTALL_DATA)
LIBRARIES = $(lib_LIBRARIES)
AR = ar
ARFLAGS = cru
libIris_a_AR = $(AR) $(ARFLAGS)
libIris_a_LIBADD =
am__objects_1 = libIris_a-link.$(OBJEXT) libIris_a-clock.$(OBJEXT) \
	libIris_a-simulator.$(OBJEXT) libIris_a-component.$(OBJEXT) \
	libIris_a-genericData.$(OBJEXT) libIris_a-irisEvent.$(OBJEXT) \
	libIris_a-flit.$(OBJEXT) libIris_a-highLevelPacket.$(OBJEXT) \
	libIris_a-lowLevelPacket.$(OBJEXT) libIris_a-router.$(OBJEXT) \
	libIris_a-processor.$(OBJEXT) libIris_a-interface.$(OBJEXT) \
	libIris_a-irisLink.$(OBJEXT) \
	libIris_a-networkComponent.$(OBJEXT) \
	libIris_a-genericBuffer.$(OBJEXT) \
	libIris_a-genericRC.$(OBJEXT) \
	libIris_a-genericCrossbar.$(OBJEXT) \
	libIris_a-genericInterfaceVcs.$(OBJEXT) \
	libIris_a-genericVcArbiter.$(OBJEXT) \
	libIris_a-genericArbiter.$(OBJEXT) \
	libIris_a-genericLink.$(OBJEXT) libIris_a-ptopSwaVcs.$(OBJEXT) \
	libIris_a-pvtopv_swa.$(OBJEXT) libIris_a-ptop_swa.$(OBJEXT) \
	libIris_a-genericRouter4Stg.$(OBJEXT) \
	libIris_a-genericRouter3Stg.$(OBJEXT) \
	libIris_a-genericTracePktGen.$(OBJEXT) \
	libIris_a-genericVcAllocator.$(OBJEXT) \
	libIris_a-genericFlatMc.$(OBJEXT) \
	libIris_a-memctrlFE.$(OBJEXT)
am_libIris_a_OBJECTS = $(am__objects_1)
libIris_a_OBJECTS = $(am_libIris_a_OBJECTS)
DEFAULT_INCLUDES = -I. -I$(srcdir) -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
SOURCES = $(libIris_a_SOURCES)
DIST_SOURCES = $(libIris_a_SOURCES)
HEADERS = $(noinst_HEADERS)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /home/sharda/manifold/missing --run aclocal-1.9
AMDEP_FALSE = #
AMDEP_TRUE = 
AMTAR = ${SHELL} /home/sharda/manifold/missing --run tar
AUTOCONF = ${SHELL} /home/sharda/manifold/missing --run autoconf
AUTOHEADER = ${SHELL} /home/sharda/manifold/missing --run autoheader
AUTOMAKE = ${SHELL} /home/sharda/manifold/missing --run automake-1.9
AWK = gawk
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2
CPP = gcc -E
CPPFLAGS = 
CXX = g++
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -O2
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = grep -E
EXEEXT = 
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = ${SHELL} $(install_sh) -c -s
LDFLAGS = 
LIBOBJS = 
LIBS = 
LTLIBOBJS = 
MAKEINFO = ${SHELL} /home/sharda/manifold/missing --run makeinfo
OBJEXT = o
PACKAGE = Iris
PACKAGE_BUGREPORT = mitchelle dot rasquinha at gatech.edu
PACKAGE_NAME = iris
PACKAGE_STRING = iris 0.1
PACKAGE_TARNAME = iris
PACKAGE_VERSION = 0.1
PATH_SEPARATOR = :
RANLIB = ranlib
SET_MAKE = 
SHELL = /bin/sh
STRIP = 
VERSION = 1.0
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_RANLIB = ranlib
ac_ct_STRIP = 
am__fastdepCC_FALSE = #
am__fastdepCC_TRUE = 
am__fastdepCXX_FALSE = #
am__fastdepCXX_TRUE = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = ${AMTAR} chof - "$$tardir"
am__untar = ${AMTAR} xf -
bindir = ${exec_prefix}/bin
build_alias = 
datadir = ${prefix}/share
exec_prefix = ${prefix}
host_alias = 
includedir = ${prefix}/include
infodir = ${prefix}/info
install_sh = /home/sharda/manifold/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localstatedir = ${prefix}/var
mandir = ${prefix}/man
mkdir_p = mkdir -p --
oldincludedir = /usr/include
prefix = /usr/local
program_transform_name = s,x,x,
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
sysconfdir = ${prefix}/etc
target_alias = 
lib_LIBRARIES = libIris.a
IRIS_SOURCES = \
		  ../kernel/link.cc \
		  ../kernel/clock.cc \
		  ../kernel/simulator.cc \
		  ../kernel/component.cc \
		  ../util/genericData.cc \
		  data_types/impl/irisEvent.cc \
		  data_types/impl/flit.cc \
		  data_types/impl/highLevelPacket.cc \
		  data_types/impl/lowLevelPacket.cc \
		  components/interfaces/router.cc \
		  components/interfaces/processor.cc \
		  components/interfaces/interface.cc \
		  components/interfaces/irisLink.cc \
		  components/interfaces/networkComponent.cc \
		  components/impl/genericBuffer.cc \
		  components/impl/genericRC.cc \
		  components/impl/genericCrossbar.cc \
		  components/impl/genericInterfaceVcs.cc \
		  components/impl/genericVcArbiter.cc \
		  components/impl/genericArbiter.cc \
		  components/impl/genericLink.cc \
		  components/impl/ptopSwaVcs.cc \
		  components/impl/pvtopv_swa.cc \
		  components/impl/ptop_swa.cc \
		  components/impl/genericRouter4Stg.cc \
		  components/impl/genericRouter3Stg.cc \
		  components/impl/genericTracePktGen.cc \
		  components/impl/genericVcAllocator.cc \
		  components/impl/genericFlatMc.cc \
		  components/impl/memctrlFE.cc

libIris_a_CXXFLAGS = $(CXX_FLAGS)
libIris_a_SOURCES = $(IRIS_SOURCES)
noinst_HEADERS = $(ALL_HDRS)
all: all-am

.SUFFIXES:
.SUFFIXES: .cc .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  source/simIris/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  source/simIris/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
install-libLIBRARIES: $(lib_LIBRARIES)
	@$(NORMAL_INSTALL)
	test -z "$(libdir)" || $(mkdir_p) "$(DESTDIR)$(libdir)"
	@list='$(lib_LIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    f=$(am__strip_dir) \
	    echo " $(libLIBRARIES_INSTALL) '$$p' '$(DESTDIR)$(libdir)/$$f'"; \
	    $(libLIBRARIES_INSTALL) "$$p" "$(DESTDIR)$(libdir)/$$f"; \
	  else :; fi; \
	done
	@$(POST_INSTALL)
	@list='$(lib_LIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    p=$(am__strip_dir) \
	    echo " $(RANLIB) '$(DESTDIR)$(libdir)/$$p'"; \
	    $(RANLIB) "$(DESTDIR)$(libdir)/$$p"; \
	  else :; fi; \
	done

uninstall-libLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LIBRARIES)'; for p in $$list; do \
	  p=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(libdir)/$$p'"; \
	  rm -f "$(DESTDIR)$(libdir)/$$p"; \
	done

clean-libLIBRARIES:
	-test -z "$(lib_LIBRARIES)" || rm -f $(lib_LIBRARIES)
libIris.a: $(libIris_a_OBJECTS) $(libIris_a_DEPENDENCIES) 
	-rm -f libIris.a
	$(libIris_a_AR) libIris.a $(libIris_a_OBJECTS) $(libIris_a_LIBADD)
	$(RANLIB) libIris.a

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/libIris_a-clock.Po
include ./$(DEPDIR)/libIris_a-component.Po
include ./$(DEPDIR)/libIris_a-flit.Po
include ./$(DEPDIR)/libIris_a-genericArbiter.Po
include ./$(DEPDIR)/libIris_a-genericBuffer.Po
include ./$(DEPDIR)/libIris_a-genericCrossbar.Po
include ./$(DEPDIR)/libIris_a-genericData.Po
include ./$(DEPDIR)/libIris_a-genericFlatMc.Po
include ./$(DEPDIR)/libIris_a-genericInterfaceVcs.Po
include ./$(DEPDIR)/libIris_a-genericLink.Po
include ./$(DEPDIR)/libIris_a-genericRC.Po
include ./$(DEPDIR)/libIris_a-genericRouter3Stg.Po
include ./$(DEPDIR)/libIris_a-genericRouter4Stg.Po
include ./$(DEPDIR)/libIris_a-genericTracePktGen.Po
include ./$(DEPDIR)/libIris_a-genericVcAllocator.Po
include ./$(DEPDIR)/libIris_a-genericVcArbiter.Po
include ./$(DEPDIR)/libIris_a-highLevelPacket.Po
include ./$(DEPDIR)/libIris_a-interface.Po
include ./$(DEPDIR)/libIris_a-irisEvent.Po
include ./$(DEPDIR)/libIris_a-irisLink.Po
include ./$(DEPDIR)/libIris_a-link.Po
include ./$(DEPDIR)/libIris_a-lowLevelPacket.Po
include ./$(DEPDIR)/libIris_a-memctrlFE.Po
include ./$(DEPDIR)/libIris_a-networkComponent.Po
include ./$(DEPDIR)/libIris_a-processor.Po
include ./$(DEPDIR)/libIris_a-ptopSwaVcs.Po
include ./$(DEPDIR)/libIris_a-ptop_swa.Po
include ./$(DEPDIR)/libIris_a-pvtopv_swa.Po
include ./$(DEPDIR)/libIris_a-router.Po
include ./$(DEPDIR)/libIris_a-simulator.Po

.cc.o:
	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ $<

.cc.obj:
	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ `$(CYGPATH_W) '$<'`; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

libIris_a-link.o: ../kernel/link.cc
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libIris_a_CXXFLAGS) $(CXXFLAGS) -MT libIris_a-link.o -MD -MP -MF "$(DEPDIR)/libIris_a-link.Tpo" -c -o libIris_a-link.o `test -f '../kernel/link.cc' || echo '$(srcdir)/'`../kernel/link.cc; \
	then mv -f "$(DEPDIR)/libIris_a-link.Tpo" "$(DEPDIR)/libIris_a-link.Po"; else rm -f "$(DEPDIR)/libIris_a-link.Tpo"; exit 1; fi
#	source='../kernel/link.cc' object='libIris_a-link.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libIris_a_CXXFLAGS) $(CXXFLAGS) -c -o libIris_a-link.o `test -f '../kernel/link.cc' || echo '$(srcdir)/'`../kernel/link.cc

libIris_a-link.obj: ../kernel/link.cc
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libIris_a_CXXFLAGS) $(CXXFLAGS) -MT libIris_a-link.obj -MD -MP -MF "$(DEPDIR)/libIris_a-link.Tpo" -c -o libIris_a-link.obj `if test -f '../kernel/link.cc'; then $(CYGPATH_W) '../kernel/link.cc'; else $(CYGPATH_W) '$(srcdir)/../kernel/link.cc'; fi`; \
	then mv -f "$(DEPDIR)/libIris_a-link.Tpo" "$(DEPDIR)/libIris_a-link.Po"; else rm -f "$(DEPDIR)/libIris_a-link.Tpo"; exit 1; fi
#	source='../kernel/link.cc' object='libIris_a-link.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libIris_a_CXXFLAGS) $(CXXFLAGS) -c -o libIris_a-link.obj `if test -f '../kernel/link.cc'; then $(CYGPATH_W) '../kernel/link.cc'; else $(CYGPATH_W) '$(srcdir)/../kernel/link.cc'; fi`

libIris_a-clock.o: ../kernel/clock.cc
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libIris_a_CXXFLAGS) $(CXXFLAGS) -MT libIris_a-clock.o -MD -MP -MF "$(DEPDIR)/libIris_a-clock.Tpo" -c -o libIris_a-clock.o `test -f '../kernel/clock.cc' || echo '$(srcdir)/'`../kernel/clock.cc; \
	then mv -f "$(DEPDIR)/libIris_a-clock.Tpo" "$(DEPDIR)/libIris_a-clock.Po"; else rm -f "$(DEPDIR)/libIris_a-clock.Tpo"; exit 1; fi
#	source='../kernel/clock.cc' object='libIris_a-clock.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libIris_a_CXXFLAGS) $(CXXFLAGS) -c -o libIris_a-clock.o `test -f '../kernel/clock.cc' || echo '$(srcdir)/'`../kernel/clock.cc

libIris_a-clock.obj: ../kernel/clock.cc
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libIris_a_CXXFLAGS) $(CXXFLAGS) -MT libIris_a-clock.obj -MD -MP -MF "$(DEPDIR)/libIris_a-clock.Tpo" -c -o libIris_a-clock.obj `if test -f '../kernel/clock.cc'; then $(CYGPATH_W) '../kernel/clock.cc'; else $(CYGPATH_W) '$(srcdir)/../kernel/clock.cc'; fi`; \
	then mv -f "$(DEPDIR)/libIris_a-clock.Tpo" "$(DEPDIR)/libIris_a-clock.Po"; else rm -f "$(DEPDIR)/libIris_a-clock.Tpo"; exit 1; fi
#	source='../kernel/clock.cc' object='libIris_a-clock.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libIris_a_CXXFLAGS) $(CXXFLAGS) -c -o libIris_a-clock.obj `if test -f '../kernel/clock.cc'; then $(CYGPATH_W) '../kernel/clock.cc'; else $(CYGPATH_W) '$(srcdir)/../kernel/clock.cc'; fi`

libIris_a-simulator.o: ../kernel/simulator.cc
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libIris_a_CXXFLAGS) $(CXXFLAGS) -MT libIris_a-simulator.o -MD -MP -MF "$(DEPDIR)/libIris_a-simulator.Tpo" -c -o libIris_a-simulator.o `test -f '../kernel/simulator.cc' || echo '$(srcdir)/'`../kernel/simulator.cc; \
	then mv -f "$(DEPDIR)/libIris_a-simulator.Tpo" "$(DEPDIR)/libIris_a-simulator.Po"; else rm -f "$(DEPDIR)/libIris_a-simulator.Tpo"; exit 1; fi
#	source='../kernel/simulator.cc' object='libIris_a-simulator.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libIris_a_CXXFLAGS) $(CXXFLAGS) -c -o libIris_a-simulator.o `test -f '../kernel/simulator.cc' || echo '$(srcdir)/'`../kernel/simulator.cc

libIris_a-simulator.obj: ../kernel/simulator.cc
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libIris_a_CXXFLAGS) $(CXXFLAGS) -MT libIris_a-simulator.obj -MD -MP -MF "$(DEPDIR)/libIris_a-simulator.Tpo" -c -o libIris_a-simulator.obj `if test -f '../kernel/simulator.cc'; then $(CYGPATH_W) '../kernel/simulator.cc'; else $(CYGPATH_W) '$(srcdir)/../kernel/simulator.cc'; fi`; \
	then mv -f "$(DEPDIR)/libIris_a-simulator.Tpo" "$(DEPDIR)/libIris_a-simulator.Po"; else rm -f "$(DEPDIR)/libIris_a-simulator.Tpo"; exit 1; fi
#	source='../kernel/simulator.cc' object='libIris_a-simulator.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libIris_a_CXXFLAGS) $(CXXFLAGS) -c -o libIris_a-simulator.obj `if test -f '../kernel/simulator.cc'; then $(CYGPATH_W) '../kernel/simulator.cc'; else $(CYGPATH_W) '$(srcdir)/../kernel/simulator.cc'; fi`

libIris_a-component.o: ../kernel/component.cc
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libIris_a_CXXFLAGS) $(CXXFLAGS) -MT libIris_a-component.o -MD -MP -MF "$(DEPDIR)/libIris_a-component.Tpo" -c -o libIris_a-component.o `test -f '../kernel/component.cc' || echo '$(srcdir)/'`../kernel/component.cc; \
	then mv -f "$(DEPDIR)/libIris_a-component.Tpo" "$(DEPDIR)/libIris_a-component.Po"; else rm -f "$(DEPDIR)/libIris_a-component.Tpo"; exit 1; fi
#	source='../kernel/component.cc' object='libIris_a-component.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libIris_a_CXXFLAGS) $(CXXFLAGS) -c -o libIris_a-component.o `test -f '../kernel/component.cc' || echo '$(srcdir)/'`../kernel/component.cc

libIris_a-component.obj: ../kernel/component.cc
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libIris_a_CXXFLAGS) $(CXXFLAGS) -MT libIris_a-component.obj -MD -MP -MF "$(DEPDIR)/libIris_a-component.Tpo" -c -o libIris_a-component.obj `if test -f '../kernel/component.cc'; then $(CYGPATH_W) '../kernel/component.cc'; else $(CYGPATH_W) '$(srcdir)/../kernel/component.cc'; fi`; \
	then mv -f "$(DEPDIR)/libIris_a-component.Tpo" "$(DEPDIR)/libIris_a-component.Po"; else rm -f "$(DEPDIR)/libIris_a-component.Tpo"; exit 1; fi
#	source='../kernel/component.cc' object='libIris_a-component.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libIris_a_CXXFLAGS) $(CXXFLAGS) -c -o libIris_a-component.obj `if test -f '../kernel/component.cc'; then $(CYGPATH_W) '../kernel/component.cc'; else $(CYGPATH_W) '$(srcdir)/../kernel/component.cc'; fi`

libIris_a-genericData.o: ../util/genericData.cc
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libIris_a_CXXFLAGS) $(CXXFLAGS) -MT libIris_a-genericData.o -MD -MP -MF "$(DEPDIR)/libIris_a-genericData.Tpo" -c -o libIris_a-genericData.o `test -f '../util/genericData.cc' || echo '$(srcdir)/'`../util/genericData.cc; \
	then mv -f "$(DEPDIR)/libIris_a-genericData.Tpo" "$(DEPDIR)/libIris_a-genericData.Po"; else rm -f "$(DEPDIR)/libIris_a-genericData.Tpo"; exit 1; fi
#	source='../util/genericData.cc' object='libIris_a-genericData.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libIris_a_CXXFLAGS) $(CXXFLAGS) -c -o libIris_a-genericData.o `test -f '../util/genericData.cc' || echo '$(srcdir)/'`../util/genericData.cc

libIris_a-genericData.obj: ../util/genericData.cc
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libIris_a_CXXFLAGS) $(CXXFLAGS) -MT libIris_a-genericData.obj -MD -MP -MF "$(DEPDIR)/libIris_a-genericData.Tpo" -c -o libIris_a-genericData.obj `if test -f '../util/genericData.cc'; then $(CYGPATH_W) '../util/genericData.cc'; else $(CYGPATH_W) '$(srcdir)/../util/genericData.cc'; fi`; \
	then mv -f "$(DEPDIR)/libIris_a-genericData.Tpo" "$(DEPDIR)/libIris_a-genericData.Po"; else rm -f "$(DEPDIR)/libIris_a-genericData.Tpo"; exit 1; fi
#	source='../util/genericData.cc' object='libIris_a-genericData.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libIris_a_CXXFLAGS) $(CXXFLAGS) -c -o libIris_a-genericData.obj `if test -f '../util/genericData.cc'; then $(CYGPATH_W) '../util/genericData.cc'; else $(CYGPATH_W) '$(srcdir)/../util/genericData.cc'; fi`

libIris_a-irisEvent.o: data_types/impl/irisEvent.cc
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libIris_a_CXXFLAGS) $(CXXFLAGS) -MT libIris_a-irisEvent.o -MD -MP -MF "$(DEPDIR)/libIris_a-irisEvent.Tpo" -c -o libIris_a-irisEvent.o `test -f 'data_types/impl/irisEvent.cc' || echo '$(srcdir)/'`data_types/impl/irisEvent.cc; \
	then mv -f "$(DEPDIR)/libIris_a-irisEvent.Tpo" "$(DEPDIR)/libIris_a-irisEvent.Po"; else rm -f "$(DEPDIR)/libIris_a-irisEvent.Tpo"; exit 1; fi
#	source='data_types/impl/irisEvent.cc' object='libIris_a-irisEvent.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libIris_a_CXXFLAGS) $(CXXFLAGS) -c -o libIris_a-irisEvent.o `test -f 'data_types/impl/irisEvent.cc' || echo '$(srcdir)/'`data_types/impl/irisEvent.cc

libIris_a-irisEvent.obj: data_types/impl/irisEvent.cc
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libIris_a_CXXFLAGS) $(CXXFLAGS) -MT libIris_a-irisEvent.obj -MD -MP -MF "$(DEPDIR)/libIris_a-irisEvent.Tpo" -c -o libIris_a-irisEvent.obj `if test -f 'data_types/impl/irisEvent.cc'; then $(CYGPATH_W) 'data_types/impl/irisEvent.cc'; else $(CYGPATH_W) '$(srcdir)/data_types/impl/irisEvent.cc'; fi`; \
	then mv -f "$(DEPDIR)/libIris_a-irisEvent.Tpo" "$(DEPDIR)/libIris_a-irisEvent.Po"; else rm -f "$(DEPDIR)/libIris_a-irisEvent.Tpo"; exit 1; fi
#	source='data_types/impl/irisEvent.cc' object='libIris_a-irisEvent.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libIris_a_CXXFLAGS) $(CXXFLAGS) -c -o libIris_a-irisEvent.obj `if test -f 'data_types/impl/irisEvent.cc'; then $(CYGPATH_W) 'data_types/impl/irisEvent.cc'; else $(CYGPATH_W) '$(srcdir)/data_types/impl/irisEvent.cc'; fi`

libIris_a-flit.o: data_types/impl/flit.cc
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libIris_a_CXXFLAGS) $(CXXFLAGS) -MT libIris_a-flit.o -MD -MP -MF "$(DEPDIR)/libIris_a-flit.Tpo" -c -o libIris_a-flit.o `test -f 'data_types/impl/flit.cc' || echo '$(srcdir)/'`data_types/impl/flit.cc; \
	then mv -f "$(DEPDIR)/libIris_a-flit.Tpo" "$(DEPDIR)/libIris_a-flit.Po"; else rm -f "$(DEPDIR)/libIris_a-flit.Tpo"; exit 1; fi
#	source='data_types/impl/flit.cc' object='libIris_a-flit.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libIris_a_CXXFLAGS) $(CXXFLAGS) -c -o libIris_a-flit.o `test -f 'data_types/impl/flit.cc' || echo '$(srcdir)/'`data_types/impl/flit.cc

libIris_a-flit.obj: data_types/impl/flit.cc
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libIris_a_CXXFLAGS) $(CXXFLAGS) -MT libIris_a-flit.obj -MD -MP -MF "$(DEPDIR)/libIris_a-flit.Tpo" -c -o libIris_a-flit.obj `if test -f 'data_types/impl/flit.cc'; then $(CYGPATH_W) 'data_types/impl/flit.cc'; else $(CYGPATH_W) '$(srcdir)/data_types/impl/flit.cc'; fi`; \
	then mv -f "$(DEPDIR)/libIris_a-flit.Tpo" "$(DEPDIR)/libIris_a-flit.Po"; else rm -f "$(DEPDIR)/libIris_a-flit.Tpo"; exit 1; fi
#	source='data_types/impl/flit.cc' object='libIris_a-flit.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libIris_a_CXXFLAGS) $(CXXFLAGS) -c -o libIris_a-flit.obj `if test -f 'data_types/impl/flit.cc'; then $(CYGPATH_W) 'data_types/impl/flit.cc'; else $(CYGPATH_W) '$(srcdir)/data_types/impl/flit.cc'; fi`

libIris_a-highLevelPacket.o: data_types/impl/highLevelPacket.cc
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libIris_a_CXXFLAGS) $(CXXFLAGS) -MT libIris_a-highLevelPacket.o -MD -MP -MF "$(DEPDIR)/libIris_a-highLevelPacket.Tpo" -c -o libIris_a-highLevelPacket.o `test -f 'data_types/impl/highLevelPacket.cc' || echo '$(srcdir)/'`data_types/impl/highLevelPacket.cc; \
	then mv -f "$(DEPDIR)/libIris_a-highLevelPacket.Tpo" "$(DEPDIR)/libIris_a-highLevelPacket.Po"; else rm -f "$(DEPDIR)/libIris_a-highLevelPacket.Tpo"; exit 1; fi
#	source='data_types/impl/highLevelPacket.cc' object='libIris_a-highLevelPacket.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libIris_a_CXXFLAGS) $(CXXFLAGS) -c -o libIris_a-highLevelPacket.o `test -f 'data_types/impl/highLevelPacket.cc' || echo '$(srcdir)/'`data_types/impl/highLevelPacket.cc

libIris_a-highLevelPacket.obj: data_types/impl/highLevelPacket.cc
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libIris_a_CXXFLAGS) $(CXXFLAGS) -MT libIris_a-highLevelPacket.obj -MD -MP -MF "$(DEPDIR)/libIris_a-highLevelPacket.Tpo" -c -o libIris_a-highLevelPacket.obj `if test -f 'data_types/impl/highLevelPacket.cc'; then $(CYGPATH_W) 'data_types/impl/highLevelPacket.cc'; else $(CYGPATH_W) '$(srcdir)/data_types/impl/highLevelPacket.cc'; fi`; \
	then mv -f "$(DEPDIR)/libIris_a-highLevelPacket.Tpo" "$(DEPDIR)/libIris_a-highLevelPacket.Po"; else rm -f "$(DEPDIR)/libIris_a-highLevelPacket.Tpo"; exit 1; fi
#	source='data_types/impl/highLevelPacket.cc' object='libIris_a-highLevelPacket.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libIris_a_CXXFLAGS) $(CXXFLAGS) -c -o libIris_a-highLevelPacket.obj `if test -f 'data_types/impl/highLevelPacket.cc'; then $(CYGPATH_W) 'data_types/impl/highLevelPacket.cc'; else $(CYGPATH_W) '$(srcdir)/data_types/impl/highLevelPacket.cc'; fi`

libIris_a-lowLevelPacket.o: data_types/impl/lowLevelPacket.cc
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libIris_a_CXXFLAGS) $(CXXFLAGS) -MT libIris_a-lowLevelPacket.o -MD -MP -MF "$(DEPDIR)/libIris_a-lowLevelPacket.Tpo" -c -o libIris_a-lowLevelPacket.o `test -f 'data_types/impl/lowLevelPacket.cc' || echo '$(srcdir)/'`data_types/impl/lowLevelPacket.cc; \
	then mv -f "$(DEPDIR)/libIris_a-lowLevelPacket.Tpo" "$(DEPDIR)/libIris_a-lowLevelPacket.Po"; else rm -f "$(DEPDIR)/libIris_a-lowLevelPacket.Tpo"; exit 1; fi
#	source='data_types/impl/lowLevelPacket.cc' object='libIris_a-lowLevelPacket.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libIris_a_CXXFLAGS) $(CXXFLAGS) -c -o libIris_a-lowLevelPacket.o `test -f 'data_types/impl/lowLevelPacket.cc' || echo '$(srcdir)/'`data_types/impl/lowLevelPacket.cc

libIris_a-lowLevelPacket.obj: data_types/impl/lowLevelPacket.cc
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libIris_a_CXXFLAGS) $(CXXFLAGS) -MT libIris_a-lowLevelPacket.obj -MD -MP -MF "$(DEPDIR)/libIris_a-lowLevelPacket.Tpo" -c -o libIris_a-lowLevelPacket.obj `if test -f 'data_types/impl/lowLevelPacket.cc'; then $(CYGPATH_W) 'data_types/impl/lowLevelPacket.cc'; else $(CYGPATH_W) '$(srcdir)/data_types/impl/lowLevelPacket.cc'; fi`; \
	then mv -f "$(DEPDIR)/libIris_a-lowLevelPacket.Tpo" "$(DEPDIR)/libIris_a-lowLevelPacket.Po"; else rm -f "$(DEPDIR)/libIris_a-lowLevelPacket.Tpo"; exit 1; fi
#	source='data_types/impl/lowLevelPacket.cc' object='libIris_a-lowLevelPacket.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libIris_a_CXXFLAGS) $(CXXFLAGS) -c -o libIris_a-lowLevelPacket.obj `if test -f 'data_types/impl/lowLevelPacket.cc'; then $(CYGPATH_W) 'data_types/impl/lowLevelPacket.cc'; else $(CYGPATH_W) '$(srcdir)/data_types/impl/lowLevelPacket.cc'; fi`

libIris_a-router.o: components/interfaces/router.cc
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libIris_a_CXXFLAGS) $(CXXFLAGS) -MT libIris_a-router.o -MD -MP -MF "$(DEPDIR)/libIris_a-router.Tpo" -c -o libIris_a-router.o `test -f 'components/interfaces/router.cc' || echo '$(srcdir)/'`components/interfaces/router.cc; \
	then mv -f "$(DEPDIR)/libIris_a-router.Tpo" "$(DEPDIR)/libIris_a-router.Po"; else rm -f "$(DEPDIR)/libIris_a-router.Tpo"; exit 1; fi
#	source='components/interfaces/router.cc' object='libIris_a-router.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libIris_a_CXXFLAGS) $(CXXFLAGS) -c -o libIris_a-router.o `test -f 'components/interfaces/router.cc' || echo '$(srcdir)/'`components/interfaces/router.cc

libIris_a-router.obj: components/interfaces/router.cc
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libIris_a_CXXFLAGS) $(CXXFLAGS) -MT libIris_a-router.obj -MD -MP -MF "$(DEPDIR)/libIris_a-router.Tpo" -c -o libIris_a-router.obj `if test -f 'components/interfaces/router.cc'; then $(CYGPATH_W) 'components/interfaces/router.cc'; else $(CYGPATH_W) '$(srcdir)/components/interfaces/router.cc'; fi`; \
	then mv -f "$(DEPDIR)/libIris_a-router.Tpo" "$(DEPDIR)/libIris_a-router.Po"; else rm -f "$(DEPDIR)/libIris_a-router.Tpo"; exit 1; fi
#	source='components/interfaces/router.cc' object='libIris_a-router.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libIris_a_CXXFLAGS) $(CXXFLAGS) -c -o libIris_a-router.obj `if test -f 'components/interfaces/router.cc'; then $(CYGPATH_W) 'components/interfaces/router.cc'; else $(CYGPATH_W) '$(srcdir)/components/interfaces/router.cc'; fi`

libIris_a-processor.o: components/interfaces/processor.cc
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libIris_a_CXXFLAGS) $(CXXFLAGS) -MT libIris_a-processor.o -MD -MP -MF "$(DEPDIR)/libIris_a-processor.Tpo" -c -o libIris_a-processor.o `test -f 'components/interfaces/processor.cc' || echo '$(srcdir)/'`components/interfaces/processor.cc; \
	then mv -f "$(DEPDIR)/libIris_a-processor.Tpo" "$(DEPDIR)/libIris_a-processor.Po"; else rm -f "$(DEPDIR)/libIris_a-processor.Tpo"; exit 1; fi
#	source='components/interfaces/processor.cc' object='libIris_a-processor.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libIris_a_CXXFLAGS) $(CXXFLAGS) -c -o libIris_a-processor.o `test -f 'components/interfaces/processor.cc' || echo '$(srcdir)/'`components/interfaces/processor.cc

libIris_a-processor.obj: components/interfaces/processor.cc
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libIris_a_CXXFLAGS) $(CXXFLAGS) -MT libIris_a-processor.obj -MD -MP -MF "$(DEPDIR)/libIris_a-processor.Tpo" -c -o libIris_a-processor.obj `if test -f 'components/interfaces/processor.cc'; then $(CYGPATH_W) 'components/interfaces/processor.cc'; else $(CYGPATH_W) '$(srcdir)/components/interfaces/processor.cc'; fi`; \
	then mv -f "$(DEPDIR)/libIris_a-processor.Tpo" "$(DEPDIR)/libIris_a-processor.Po"; else rm -f "$(DEPDIR)/libIris_a-processor.Tpo"; exit 1; fi
#	source='components/interfaces/processor.cc' object='libIris_a-processor.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libIris_a_CXXFLAGS) $(CXXFLAGS) -c -o libIris_a-processor.obj `if test -f 'components/interfaces/processor.cc'; then $(CYGPATH_W) 'components/interfaces/processor.cc'; else $(CYGPATH_W) '$(srcdir)/components/interfaces/processor.cc'; fi`

libIris_a-interface.o: components/interfaces/interface.cc
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libIris_a_CXXFLAGS) $(CXXFLAGS) -MT libIris_a-interface.o -MD -MP -MF "$(DEPDIR)/libIris_a-interface.Tpo" -c -o libIris_a-interface.o `test -f 'components/interfaces/interface.cc' || echo '$(srcdir)/'`components/interfaces/interface.cc; \
	then mv -f "$(DEPDIR)/libIris_a-interface.Tpo" "$(DEPDIR)/libIris_a-interface.Po"; else rm -f "$(DEPDIR)/libIris_a-interface.Tpo"; exit 1; fi
#	source='components/interfaces/interface.cc' object='libIris_a-interface.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libIris_a_CXXFLAGS) $(CXXFLAGS) -c -o libIris_a-interface.o `test -f 'components/interfaces/interface.cc' || echo '$(srcdir)/'`components/interfaces/interface.cc

libIris_a-interface.obj: components/interfaces/interface.cc
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libIris_a_CXXFLAGS) $(CXXFLAGS) -MT libIris_a-interface.obj -MD -MP -MF "$(DEPDIR)/libIris_a-interface.Tpo" -c -o libIris_a-interface.obj `if test -f 'components/interfaces/interface.cc'; then $(CYGPATH_W) 'components/interfaces/interface.cc'; else $(CYGPATH_W) '$(srcdir)/components/interfaces/interface.cc'; fi`; \
	then mv -f "$(DEPDIR)/libIris_a-interface.Tpo" "$(DEPDIR)/libIris_a-interface.Po"; else rm -f "$(DEPDIR)/libIris_a-interface.Tpo"; exit 1; fi
#	source='components/interfaces/interface.cc' object='libIris_a-interface.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libIris_a_CXXFLAGS) $(CXXFLAGS) -c -o libIris_a-interface.obj `if test -f 'components/interfaces/interface.cc'; then $(CYGPATH_W) 'components/interfaces/interface.cc'; else $(CYGPATH_W) '$(srcdir)/components/interfaces/interface.cc'; fi`

libIris_a-irisLink.o: components/interfaces/irisLink.cc
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libIris_a_CXXFLAGS) $(CXXFLAGS) -MT libIris_a-irisLink.o -MD -MP -MF "$(DEPDIR)/libIris_a-irisLink.Tpo" -c -o libIris_a-irisLink.o `test -f 'components/interfaces/irisLink.cc' || echo '$(srcdir)/'`components/interfaces/irisLink.cc; \
	then mv -f "$(DEPDIR)/libIris_a-irisLink.Tpo" "$(DEPDIR)/libIris_a-irisLink.Po"; else rm -f "$(DEPDIR)/libIris_a-irisLink.Tpo"; exit 1; fi
#	source='components/interfaces/irisLink.cc' object='libIris_a-irisLink.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libIris_a_CXXFLAGS) $(CXXFLAGS) -c -o libIris_a-irisLink.o `test -f 'components/interfaces/irisLink.cc' || echo '$(srcdir)/'`components/interfaces/irisLink.cc

libIris_a-irisLink.obj: components/interfaces/irisLink.cc
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libIris_a_CXXFLAGS) $(CXXFLAGS) -MT libIris_a-irisLink.obj -MD -MP -MF "$(DEPDIR)/libIris_a-irisLink.Tpo" -c -o libIris_a-irisLink.obj `if test -f 'components/interfaces/irisLink.cc'; then $(CYGPATH_W) 'components/interfaces/irisLink.cc'; else $(CYGPATH_W) '$(srcdir)/components/interfaces/irisLink.cc'; fi`; \
	then mv -f "$(DEPDIR)/libIris_a-irisLink.Tpo" "$(DEPDIR)/libIris_a-irisLink.Po"; else rm -f "$(DEPDIR)/libIris_a-irisLink.Tpo"; exit 1; fi
#	source='components/interfaces/irisLink.cc' object='libIris_a-irisLink.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libIris_a_CXXFLAGS) $(CXXFLAGS) -c -o libIris_a-irisLink.obj `if test -f 'components/interfaces/irisLink.cc'; then $(CYGPATH_W) 'components/interfaces/irisLink.cc'; else $(CYGPATH_W) '$(srcdir)/components/interfaces/irisLink.cc'; fi`

libIris_a-networkComponent.o: components/interfaces/networkComponent.cc
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libIris_a_CXXFLAGS) $(CXXFLAGS) -MT libIris_a-networkComponent.o -MD -MP -MF "$(DEPDIR)/libIris_a-networkComponent.Tpo" -c -o libIris_a-networkComponent.o `test -f 'components/interfaces/networkComponent.cc' || echo '$(srcdir)/'`components/interfaces/networkComponent.cc; \
	then mv -f "$(DEPDIR)/libIris_a-networkComponent.Tpo" "$(DEPDIR)/libIris_a-networkComponent.Po"; else rm -f "$(DEPDIR)/libIris_a-networkComponent.Tpo"; exit 1; fi
#	source='components/interfaces/networkComponent.cc' object='libIris_a-networkComponent.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libIris_a_CXXFLAGS) $(CXXFLAGS) -c -o libIris_a-networkComponent.o `test -f 'components/interfaces/networkComponent.cc' || echo '$(srcdir)/'`components/interfaces/networkComponent.cc

libIris_a-networkComponent.obj: components/interfaces/networkComponent.cc
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libIris_a_CXXFLAGS) $(CXXFLAGS) -MT libIris_a-networkComponent.obj -MD -MP -MF "$(DEPDIR)/libIris_a-networkComponent.Tpo" -c -o libIris_a-networkComponent.obj `if test -f 'components/interfaces/networkComponent.cc'; then $(CYGPATH_W) 'components/interfaces/networkComponent.cc'; else $(CYGPATH_W) '$(srcdir)/components/interfaces/networkComponent.cc'; fi`; \
	then mv -f "$(DEPDIR)/libIris_a-networkComponent.Tpo" "$(DEPDIR)/libIris_a-networkComponent.Po"; else rm -f "$(DEPDIR)/libIris_a-networkComponent.Tpo"; exit 1; fi
#	source='components/interfaces/networkComponent.cc' object='libIris_a-networkComponent.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libIris_a_CXXFLAGS) $(CXXFLAGS) -c -o libIris_a-networkComponent.obj `if test -f 'components/interfaces/networkComponent.cc'; then $(CYGPATH_W) 'components/interfaces/networkComponent.cc'; else $(CYGPATH_W) '$(srcdir)/components/interfaces/networkComponent.cc'; fi`

libIris_a-genericBuffer.o: components/impl/genericBuffer.cc
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libIris_a_CXXFLAGS) $(CXXFLAGS) -MT libIris_a-genericBuffer.o -MD -MP -MF "$(DEPDIR)/libIris_a-genericBuffer.Tpo" -c -o libIris_a-genericBuffer.o `test -f 'components/impl/genericBuffer.cc' || echo '$(srcdir)/'`components/impl/genericBuffer.cc; \
	then mv -f "$(DEPDIR)/libIris_a-genericBuffer.Tpo" "$(DEPDIR)/libIris_a-genericBuffer.Po"; else rm -f "$(DEPDIR)/libIris_a-genericBuffer.Tpo"; exit 1; fi
#	source='components/impl/genericBuffer.cc' object='libIris_a-genericBuffer.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libIris_a_CXXFLAGS) $(CXXFLAGS) -c -o libIris_a-genericBuffer.o `test -f 'components/impl/genericBuffer.cc' || echo '$(srcdir)/'`components/impl/genericBuffer.cc

libIris_a-genericBuffer.obj: components/impl/genericBuffer.cc
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libIris_a_CXXFLAGS) $(CXXFLAGS) -MT libIris_a-genericBuffer.obj -MD -MP -MF "$(DEPDIR)/libIris_a-genericBuffer.Tpo" -c -o libIris_a-genericBuffer.obj `if test -f 'components/impl/genericBuffer.cc'; then $(CYGPATH_W) 'components/impl/genericBuffer.cc'; else $(CYGPATH_W) '$(srcdir)/components/impl/genericBuffer.cc'; fi`; \
	then mv -f "$(DEPDIR)/libIris_a-genericBuffer.Tpo" "$(DEPDIR)/libIris_a-genericBuffer.Po"; else rm -f "$(DEPDIR)/libIris_a-genericBuffer.Tpo"; exit 1; fi
#	source='components/impl/genericBuffer.cc' object='libIris_a-genericBuffer.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libIris_a_CXXFLAGS) $(CXXFLAGS) -c -o libIris_a-genericBuffer.obj `if test -f 'components/impl/genericBuffer.cc'; then $(CYGPATH_W) 'components/impl/genericBuffer.cc'; else $(CYGPATH_W) '$(srcdir)/components/impl/genericBuffer.cc'; fi`

libIris_a-genericRC.o: components/impl/genericRC.cc
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libIris_a_CXXFLAGS) $(CXXFLAGS) -MT libIris_a-genericRC.o -MD -MP -MF "$(DEPDIR)/libIris_a-genericRC.Tpo" -c -o libIris_a-genericRC.o `test -f 'components/impl/genericRC.cc' || echo '$(srcdir)/'`components/impl/genericRC.cc; \
	then mv -f "$(DEPDIR)/libIris_a-genericRC.Tpo" "$(DEPDIR)/libIris_a-genericRC.Po"; else rm -f "$(DEPDIR)/libIris_a-genericRC.Tpo"; exit 1; fi
#	source='components/impl/genericRC.cc' object='libIris_a-genericRC.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libIris_a_CXXFLAGS) $(CXXFLAGS) -c -o libIris_a-genericRC.o `test -f 'components/impl/genericRC.cc' || echo '$(srcdir)/'`components/impl/genericRC.cc

libIris_a-genericRC.obj: components/impl/genericRC.cc
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libIris_a_CXXFLAGS) $(CXXFLAGS) -MT libIris_a-genericRC.obj -MD -MP -MF "$(DEPDIR)/libIris_a-genericRC.Tpo" -c -o libIris_a-genericRC.obj `if test -f 'components/impl/genericRC.cc'; then $(CYGPATH_W) 'components/impl/genericRC.cc'; else $(CYGPATH_W) '$(srcdir)/components/impl/genericRC.cc'; fi`; \
	then mv -f "$(DEPDIR)/libIris_a-genericRC.Tpo" "$(DEPDIR)/libIris_a-genericRC.Po"; else rm -f "$(DEPDIR)/libIris_a-genericRC.Tpo"; exit 1; fi
#	source='components/impl/genericRC.cc' object='libIris_a-genericRC.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libIris_a_CXXFLAGS) $(CXXFLAGS) -c -o libIris_a-genericRC.obj `if test -f 'components/impl/genericRC.cc'; then $(CYGPATH_W) 'components/impl/genericRC.cc'; else $(CYGPATH_W) '$(srcdir)/components/impl/genericRC.cc'; fi`

libIris_a-genericCrossbar.o: components/impl/genericCrossbar.cc
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libIris_a_CXXFLAGS) $(CXXFLAGS) -MT libIris_a-genericCrossbar.o -MD -MP -MF "$(DEPDIR)/libIris_a-genericCrossbar.Tpo" -c -o libIris_a-genericCrossbar.o `test -f 'components/impl/genericCrossbar.cc' || echo '$(srcdir)/'`components/impl/genericCrossbar.cc; \
	then mv -f "$(DEPDIR)/libIris_a-genericCrossbar.Tpo" "$(DEPDIR)/libIris_a-genericCrossbar.Po"; else rm -f "$(DEPDIR)/libIris_a-genericCrossbar.Tpo"; exit 1; fi
#	source='components/impl/genericCrossbar.cc' object='libIris_a-genericCrossbar.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libIris_a_CXXFLAGS) $(CXXFLAGS) -c -o libIris_a-genericCrossbar.o `test -f 'components/impl/genericCrossbar.cc' || echo '$(srcdir)/'`components/impl/genericCrossbar.cc

libIris_a-genericCrossbar.obj: components/impl/genericCrossbar.cc
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libIris_a_CXXFLAGS) $(CXXFLAGS) -MT libIris_a-genericCrossbar.obj -MD -MP -MF "$(DEPDIR)/libIris_a-genericCrossbar.Tpo" -c -o libIris_a-genericCrossbar.obj `if test -f 'components/impl/genericCrossbar.cc'; then $(CYGPATH_W) 'components/impl/genericCrossbar.cc'; else $(CYGPATH_W) '$(srcdir)/components/impl/genericCrossbar.cc'; fi`; \
	then mv -f "$(DEPDIR)/libIris_a-genericCrossbar.Tpo" "$(DEPDIR)/libIris_a-genericCrossbar.Po"; else rm -f "$(DEPDIR)/libIris_a-genericCrossbar.Tpo"; exit 1; fi
#	source='components/impl/genericCrossbar.cc' object='libIris_a-genericCrossbar.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libIris_a_CXXFLAGS) $(CXXFLAGS) -c -o libIris_a-genericCrossbar.obj `if test -f 'components/impl/genericCrossbar.cc'; then $(CYGPATH_W) 'components/impl/genericCrossbar.cc'; else $(CYGPATH_W) '$(srcdir)/components/impl/genericCrossbar.cc'; fi`

libIris_a-genericInterfaceVcs.o: components/impl/genericInterfaceVcs.cc
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libIris_a_CXXFLAGS) $(CXXFLAGS) -MT libIris_a-genericInterfaceVcs.o -MD -MP -MF "$(DEPDIR)/libIris_a-genericInterfaceVcs.Tpo" -c -o libIris_a-genericInterfaceVcs.o `test -f 'components/impl/genericInterfaceVcs.cc' || echo '$(srcdir)/'`components/impl/genericInterfaceVcs.cc; \
	then mv -f "$(DEPDIR)/libIris_a-genericInterfaceVcs.Tpo" "$(DEPDIR)/libIris_a-genericInterfaceVcs.Po"; else rm -f "$(DEPDIR)/libIris_a-genericInterfaceVcs.Tpo"; exit 1; fi
#	source='components/impl/genericInterfaceVcs.cc' object='libIris_a-genericInterfaceVcs.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libIris_a_CXXFLAGS) $(CXXFLAGS) -c -o libIris_a-genericInterfaceVcs.o `test -f 'components/impl/genericInterfaceVcs.cc' || echo '$(srcdir)/'`components/impl/genericInterfaceVcs.cc

libIris_a-genericInterfaceVcs.obj: components/impl/genericInterfaceVcs.cc
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libIris_a_CXXFLAGS) $(CXXFLAGS) -MT libIris_a-genericInterfaceVcs.obj -MD -MP -MF "$(DEPDIR)/libIris_a-genericInterfaceVcs.Tpo" -c -o libIris_a-genericInterfaceVcs.obj `if test -f 'components/impl/genericInterfaceVcs.cc'; then $(CYGPATH_W) 'components/impl/genericInterfaceVcs.cc'; else $(CYGPATH_W) '$(srcdir)/components/impl/genericInterfaceVcs.cc'; fi`; \
	then mv -f "$(DEPDIR)/libIris_a-genericInterfaceVcs.Tpo" "$(DEPDIR)/libIris_a-genericInterfaceVcs.Po"; else rm -f "$(DEPDIR)/libIris_a-genericInterfaceVcs.Tpo"; exit 1; fi
#	source='components/impl/genericInterfaceVcs.cc' object='libIris_a-genericInterfaceVcs.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libIris_a_CXXFLAGS) $(CXXFLAGS) -c -o libIris_a-genericInterfaceVcs.obj `if test -f 'components/impl/genericInterfaceVcs.cc'; then $(CYGPATH_W) 'components/impl/genericInterfaceVcs.cc'; else $(CYGPATH_W) '$(srcdir)/components/impl/genericInterfaceVcs.cc'; fi`

libIris_a-genericVcArbiter.o: components/impl/genericVcArbiter.cc
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libIris_a_CXXFLAGS) $(CXXFLAGS) -MT libIris_a-genericVcArbiter.o -MD -MP -MF "$(DEPDIR)/libIris_a-genericVcArbiter.Tpo" -c -o libIris_a-genericVcArbiter.o `test -f 'components/impl/genericVcArbiter.cc' || echo '$(srcdir)/'`components/impl/genericVcArbiter.cc; \
	then mv -f "$(DEPDIR)/libIris_a-genericVcArbiter.Tpo" "$(DEPDIR)/libIris_a-genericVcArbiter.Po"; else rm -f "$(DEPDIR)/libIris_a-genericVcArbiter.Tpo"; exit 1; fi
#	source='components/impl/genericVcArbiter.cc' object='libIris_a-genericVcArbiter.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libIris_a_CXXFLAGS) $(CXXFLAGS) -c -o libIris_a-genericVcArbiter.o `test -f 'components/impl/genericVcArbiter.cc' || echo '$(srcdir)/'`components/impl/genericVcArbiter.cc

libIris_a-genericVcArbiter.obj: components/impl/genericVcArbiter.cc
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libIris_a_CXXFLAGS) $(CXXFLAGS) -MT libIris_a-genericVcArbiter.obj -MD -MP -MF "$(DEPDIR)/libIris_a-genericVcArbiter.Tpo" -c -o libIris_a-genericVcArbiter.obj `if test -f 'components/impl/genericVcArbiter.cc'; then $(CYGPATH_W) 'components/impl/genericVcArbiter.cc'; else $(CYGPATH_W) '$(srcdir)/components/impl/genericVcArbiter.cc'; fi`; \
	then mv -f "$(DEPDIR)/libIris_a-genericVcArbiter.Tpo" "$(DEPDIR)/libIris_a-genericVcArbiter.Po"; else rm -f "$(DEPDIR)/libIris_a-genericVcArbiter.Tpo"; exit 1; fi
#	source='components/impl/genericVcArbiter.cc' object='libIris_a-genericVcArbiter.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libIris_a_CXXFLAGS) $(CXXFLAGS) -c -o libIris_a-genericVcArbiter.obj `if test -f 'components/impl/genericVcArbiter.cc'; then $(CYGPATH_W) 'components/impl/genericVcArbiter.cc'; else $(CYGPATH_W) '$(srcdir)/components/impl/genericVcArbiter.cc'; fi`

libIris_a-genericArbiter.o: components/impl/genericArbiter.cc
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libIris_a_CXXFLAGS) $(CXXFLAGS) -MT libIris_a-genericArbiter.o -MD -MP -MF "$(DEPDIR)/libIris_a-genericArbiter.Tpo" -c -o libIris_a-genericArbiter.o `test -f 'components/impl/genericArbiter.cc' || echo '$(srcdir)/'`components/impl/genericArbiter.cc; \
	then mv -f "$(DEPDIR)/libIris_a-genericArbiter.Tpo" "$(DEPDIR)/libIris_a-genericArbiter.Po"; else rm -f "$(DEPDIR)/libIris_a-genericArbiter.Tpo"; exit 1; fi
#	source='components/impl/genericArbiter.cc' object='libIris_a-genericArbiter.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libIris_a_CXXFLAGS) $(CXXFLAGS) -c -o libIris_a-genericArbiter.o `test -f 'components/impl/genericArbiter.cc' || echo '$(srcdir)/'`components/impl/genericArbiter.cc

libIris_a-genericArbiter.obj: components/impl/genericArbiter.cc
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libIris_a_CXXFLAGS) $(CXXFLAGS) -MT libIris_a-genericArbiter.obj -MD -MP -MF "$(DEPDIR)/libIris_a-genericArbiter.Tpo" -c -o libIris_a-genericArbiter.obj `if test -f 'components/impl/genericArbiter.cc'; then $(CYGPATH_W) 'components/impl/genericArbiter.cc'; else $(CYGPATH_W) '$(srcdir)/components/impl/genericArbiter.cc'; fi`; \
	then mv -f "$(DEPDIR)/libIris_a-genericArbiter.Tpo" "$(DEPDIR)/libIris_a-genericArbiter.Po"; else rm -f "$(DEPDIR)/libIris_a-genericArbiter.Tpo"; exit 1; fi
#	source='components/impl/genericArbiter.cc' object='libIris_a-genericArbiter.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libIris_a_CXXFLAGS) $(CXXFLAGS) -c -o libIris_a-genericArbiter.obj `if test -f 'components/impl/genericArbiter.cc'; then $(CYGPATH_W) 'components/impl/genericArbiter.cc'; else $(CYGPATH_W) '$(srcdir)/components/impl/genericArbiter.cc'; fi`

libIris_a-genericLink.o: components/impl/genericLink.cc
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libIris_a_CXXFLAGS) $(CXXFLAGS) -MT libIris_a-genericLink.o -MD -MP -MF "$(DEPDIR)/libIris_a-genericLink.Tpo" -c -o libIris_a-genericLink.o `test -f 'components/impl/genericLink.cc' || echo '$(srcdir)/'`components/impl/genericLink.cc; \
	then mv -f "$(DEPDIR)/libIris_a-genericLink.Tpo" "$(DEPDIR)/libIris_a-genericLink.Po"; else rm -f "$(DEPDIR)/libIris_a-genericLink.Tpo"; exit 1; fi
#	source='components/impl/genericLink.cc' object='libIris_a-genericLink.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libIris_a_CXXFLAGS) $(CXXFLAGS) -c -o libIris_a-genericLink.o `test -f 'components/impl/genericLink.cc' || echo '$(srcdir)/'`components/impl/genericLink.cc

libIris_a-genericLink.obj: components/impl/genericLink.cc
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libIris_a_CXXFLAGS) $(CXXFLAGS) -MT libIris_a-genericLink.obj -MD -MP -MF "$(DEPDIR)/libIris_a-genericLink.Tpo" -c -o libIris_a-genericLink.obj `if test -f 'components/impl/genericLink.cc'; then $(CYGPATH_W) 'components/impl/genericLink.cc'; else $(CYGPATH_W) '$(srcdir)/components/impl/genericLink.cc'; fi`; \
	then mv -f "$(DEPDIR)/libIris_a-genericLink.Tpo" "$(DEPDIR)/libIris_a-genericLink.Po"; else rm -f "$(DEPDIR)/libIris_a-genericLink.Tpo"; exit 1; fi
#	source='components/impl/genericLink.cc' object='libIris_a-genericLink.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libIris_a_CXXFLAGS) $(CXXFLAGS) -c -o libIris_a-genericLink.obj `if test -f 'components/impl/genericLink.cc'; then $(CYGPATH_W) 'components/impl/genericLink.cc'; else $(CYGPATH_W) '$(srcdir)/components/impl/genericLink.cc'; fi`

libIris_a-ptopSwaVcs.o: components/impl/ptopSwaVcs.cc
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libIris_a_CXXFLAGS) $(CXXFLAGS) -MT libIris_a-ptopSwaVcs.o -MD -MP -MF "$(DEPDIR)/libIris_a-ptopSwaVcs.Tpo" -c -o libIris_a-ptopSwaVcs.o `test -f 'components/impl/ptopSwaVcs.cc' || echo '$(srcdir)/'`components/impl/ptopSwaVcs.cc; \
	then mv -f "$(DEPDIR)/libIris_a-ptopSwaVcs.Tpo" "$(DEPDIR)/libIris_a-ptopSwaVcs.Po"; else rm -f "$(DEPDIR)/libIris_a-ptopSwaVcs.Tpo"; exit 1; fi
#	source='components/impl/ptopSwaVcs.cc' object='libIris_a-ptopSwaVcs.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libIris_a_CXXFLAGS) $(CXXFLAGS) -c -o libIris_a-ptopSwaVcs.o `test -f 'components/impl/ptopSwaVcs.cc' || echo '$(srcdir)/'`components/impl/ptopSwaVcs.cc

libIris_a-ptopSwaVcs.obj: components/impl/ptopSwaVcs.cc
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libIris_a_CXXFLAGS) $(CXXFLAGS) -MT libIris_a-ptopSwaVcs.obj -MD -MP -MF "$(DEPDIR)/libIris_a-ptopSwaVcs.Tpo" -c -o libIris_a-ptopSwaVcs.obj `if test -f 'components/impl/ptopSwaVcs.cc'; then $(CYGPATH_W) 'components/impl/ptopSwaVcs.cc'; else $(CYGPATH_W) '$(srcdir)/components/impl/ptopSwaVcs.cc'; fi`; \
	then mv -f "$(DEPDIR)/libIris_a-ptopSwaVcs.Tpo" "$(DEPDIR)/libIris_a-ptopSwaVcs.Po"; else rm -f "$(DEPDIR)/libIris_a-ptopSwaVcs.Tpo"; exit 1; fi
#	source='components/impl/ptopSwaVcs.cc' object='libIris_a-ptopSwaVcs.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libIris_a_CXXFLAGS) $(CXXFLAGS) -c -o libIris_a-ptopSwaVcs.obj `if test -f 'components/impl/ptopSwaVcs.cc'; then $(CYGPATH_W) 'components/impl/ptopSwaVcs.cc'; else $(CYGPATH_W) '$(srcdir)/components/impl/ptopSwaVcs.cc'; fi`

libIris_a-pvtopv_swa.o: components/impl/pvtopv_swa.cc
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libIris_a_CXXFLAGS) $(CXXFLAGS) -MT libIris_a-pvtopv_swa.o -MD -MP -MF "$(DEPDIR)/libIris_a-pvtopv_swa.Tpo" -c -o libIris_a-pvtopv_swa.o `test -f 'components/impl/pvtopv_swa.cc' || echo '$(srcdir)/'`components/impl/pvtopv_swa.cc; \
	then mv -f "$(DEPDIR)/libIris_a-pvtopv_swa.Tpo" "$(DEPDIR)/libIris_a-pvtopv_swa.Po"; else rm -f "$(DEPDIR)/libIris_a-pvtopv_swa.Tpo"; exit 1; fi
#	source='components/impl/pvtopv_swa.cc' object='libIris_a-pvtopv_swa.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libIris_a_CXXFLAGS) $(CXXFLAGS) -c -o libIris_a-pvtopv_swa.o `test -f 'components/impl/pvtopv_swa.cc' || echo '$(srcdir)/'`components/impl/pvtopv_swa.cc

libIris_a-pvtopv_swa.obj: components/impl/pvtopv_swa.cc
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libIris_a_CXXFLAGS) $(CXXFLAGS) -MT libIris_a-pvtopv_swa.obj -MD -MP -MF "$(DEPDIR)/libIris_a-pvtopv_swa.Tpo" -c -o libIris_a-pvtopv_swa.obj `if test -f 'components/impl/pvtopv_swa.cc'; then $(CYGPATH_W) 'components/impl/pvtopv_swa.cc'; else $(CYGPATH_W) '$(srcdir)/components/impl/pvtopv_swa.cc'; fi`; \
	then mv -f "$(DEPDIR)/libIris_a-pvtopv_swa.Tpo" "$(DEPDIR)/libIris_a-pvtopv_swa.Po"; else rm -f "$(DEPDIR)/libIris_a-pvtopv_swa.Tpo"; exit 1; fi
#	source='components/impl/pvtopv_swa.cc' object='libIris_a-pvtopv_swa.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libIris_a_CXXFLAGS) $(CXXFLAGS) -c -o libIris_a-pvtopv_swa.obj `if test -f 'components/impl/pvtopv_swa.cc'; then $(CYGPATH_W) 'components/impl/pvtopv_swa.cc'; else $(CYGPATH_W) '$(srcdir)/components/impl/pvtopv_swa.cc'; fi`

libIris_a-ptop_swa.o: components/impl/ptop_swa.cc
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libIris_a_CXXFLAGS) $(CXXFLAGS) -MT libIris_a-ptop_swa.o -MD -MP -MF "$(DEPDIR)/libIris_a-ptop_swa.Tpo" -c -o libIris_a-ptop_swa.o `test -f 'components/impl/ptop_swa.cc' || echo '$(srcdir)/'`components/impl/ptop_swa.cc; \
	then mv -f "$(DEPDIR)/libIris_a-ptop_swa.Tpo" "$(DEPDIR)/libIris_a-ptop_swa.Po"; else rm -f "$(DEPDIR)/libIris_a-ptop_swa.Tpo"; exit 1; fi
#	source='components/impl/ptop_swa.cc' object='libIris_a-ptop_swa.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libIris_a_CXXFLAGS) $(CXXFLAGS) -c -o libIris_a-ptop_swa.o `test -f 'components/impl/ptop_swa.cc' || echo '$(srcdir)/'`components/impl/ptop_swa.cc

libIris_a-ptop_swa.obj: components/impl/ptop_swa.cc
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libIris_a_CXXFLAGS) $(CXXFLAGS) -MT libIris_a-ptop_swa.obj -MD -MP -MF "$(DEPDIR)/libIris_a-ptop_swa.Tpo" -c -o libIris_a-ptop_swa.obj `if test -f 'components/impl/ptop_swa.cc'; then $(CYGPATH_W) 'components/impl/ptop_swa.cc'; else $(CYGPATH_W) '$(srcdir)/components/impl/ptop_swa.cc'; fi`; \
	then mv -f "$(DEPDIR)/libIris_a-ptop_swa.Tpo" "$(DEPDIR)/libIris_a-ptop_swa.Po"; else rm -f "$(DEPDIR)/libIris_a-ptop_swa.Tpo"; exit 1; fi
#	source='components/impl/ptop_swa.cc' object='libIris_a-ptop_swa.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libIris_a_CXXFLAGS) $(CXXFLAGS) -c -o libIris_a-ptop_swa.obj `if test -f 'components/impl/ptop_swa.cc'; then $(CYGPATH_W) 'components/impl/ptop_swa.cc'; else $(CYGPATH_W) '$(srcdir)/components/impl/ptop_swa.cc'; fi`

libIris_a-genericRouter4Stg.o: components/impl/genericRouter4Stg.cc
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libIris_a_CXXFLAGS) $(CXXFLAGS) -MT libIris_a-genericRouter4Stg.o -MD -MP -MF "$(DEPDIR)/libIris_a-genericRouter4Stg.Tpo" -c -o libIris_a-genericRouter4Stg.o `test -f 'components/impl/genericRouter4Stg.cc' || echo '$(srcdir)/'`components/impl/genericRouter4Stg.cc; \
	then mv -f "$(DEPDIR)/libIris_a-genericRouter4Stg.Tpo" "$(DEPDIR)/libIris_a-genericRouter4Stg.Po"; else rm -f "$(DEPDIR)/libIris_a-genericRouter4Stg.Tpo"; exit 1; fi
#	source='components/impl/genericRouter4Stg.cc' object='libIris_a-genericRouter4Stg.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libIris_a_CXXFLAGS) $(CXXFLAGS) -c -o libIris_a-genericRouter4Stg.o `test -f 'components/impl/genericRouter4Stg.cc' || echo '$(srcdir)/'`components/impl/genericRouter4Stg.cc

libIris_a-genericRouter4Stg.obj: components/impl/genericRouter4Stg.cc
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libIris_a_CXXFLAGS) $(CXXFLAGS) -MT libIris_a-genericRouter4Stg.obj -MD -MP -MF "$(DEPDIR)/libIris_a-genericRouter4Stg.Tpo" -c -o libIris_a-genericRouter4Stg.obj `if test -f 'components/impl/genericRouter4Stg.cc'; then $(CYGPATH_W) 'components/impl/genericRouter4Stg.cc'; else $(CYGPATH_W) '$(srcdir)/components/impl/genericRouter4Stg.cc'; fi`; \
	then mv -f "$(DEPDIR)/libIris_a-genericRouter4Stg.Tpo" "$(DEPDIR)/libIris_a-genericRouter4Stg.Po"; else rm -f "$(DEPDIR)/libIris_a-genericRouter4Stg.Tpo"; exit 1; fi
#	source='components/impl/genericRouter4Stg.cc' object='libIris_a-genericRouter4Stg.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libIris_a_CXXFLAGS) $(CXXFLAGS) -c -o libIris_a-genericRouter4Stg.obj `if test -f 'components/impl/genericRouter4Stg.cc'; then $(CYGPATH_W) 'components/impl/genericRouter4Stg.cc'; else $(CYGPATH_W) '$(srcdir)/components/impl/genericRouter4Stg.cc'; fi`

libIris_a-genericRouter3Stg.o: components/impl/genericRouter3Stg.cc
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libIris_a_CXXFLAGS) $(CXXFLAGS) -MT libIris_a-genericRouter3Stg.o -MD -MP -MF "$(DEPDIR)/libIris_a-genericRouter3Stg.Tpo" -c -o libIris_a-genericRouter3Stg.o `test -f 'components/impl/genericRouter3Stg.cc' || echo '$(srcdir)/'`components/impl/genericRouter3Stg.cc; \
	then mv -f "$(DEPDIR)/libIris_a-genericRouter3Stg.Tpo" "$(DEPDIR)/libIris_a-genericRouter3Stg.Po"; else rm -f "$(DEPDIR)/libIris_a-genericRouter3Stg.Tpo"; exit 1; fi
#	source='components/impl/genericRouter3Stg.cc' object='libIris_a-genericRouter3Stg.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libIris_a_CXXFLAGS) $(CXXFLAGS) -c -o libIris_a-genericRouter3Stg.o `test -f 'components/impl/genericRouter3Stg.cc' || echo '$(srcdir)/'`components/impl/genericRouter3Stg.cc

libIris_a-genericRouter3Stg.obj: components/impl/genericRouter3Stg.cc
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libIris_a_CXXFLAGS) $(CXXFLAGS) -MT libIris_a-genericRouter3Stg.obj -MD -MP -MF "$(DEPDIR)/libIris_a-genericRouter3Stg.Tpo" -c -o libIris_a-genericRouter3Stg.obj `if test -f 'components/impl/genericRouter3Stg.cc'; then $(CYGPATH_W) 'components/impl/genericRouter3Stg.cc'; else $(CYGPATH_W) '$(srcdir)/components/impl/genericRouter3Stg.cc'; fi`; \
	then mv -f "$(DEPDIR)/libIris_a-genericRouter3Stg.Tpo" "$(DEPDIR)/libIris_a-genericRouter3Stg.Po"; else rm -f "$(DEPDIR)/libIris_a-genericRouter3Stg.Tpo"; exit 1; fi
#	source='components/impl/genericRouter3Stg.cc' object='libIris_a-genericRouter3Stg.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libIris_a_CXXFLAGS) $(CXXFLAGS) -c -o libIris_a-genericRouter3Stg.obj `if test -f 'components/impl/genericRouter3Stg.cc'; then $(CYGPATH_W) 'components/impl/genericRouter3Stg.cc'; else $(CYGPATH_W) '$(srcdir)/components/impl/genericRouter3Stg.cc'; fi`

libIris_a-genericTracePktGen.o: components/impl/genericTracePktGen.cc
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libIris_a_CXXFLAGS) $(CXXFLAGS) -MT libIris_a-genericTracePktGen.o -MD -MP -MF "$(DEPDIR)/libIris_a-genericTracePktGen.Tpo" -c -o libIris_a-genericTracePktGen.o `test -f 'components/impl/genericTracePktGen.cc' || echo '$(srcdir)/'`components/impl/genericTracePktGen.cc; \
	then mv -f "$(DEPDIR)/libIris_a-genericTracePktGen.Tpo" "$(DEPDIR)/libIris_a-genericTracePktGen.Po"; else rm -f "$(DEPDIR)/libIris_a-genericTracePktGen.Tpo"; exit 1; fi
#	source='components/impl/genericTracePktGen.cc' object='libIris_a-genericTracePktGen.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libIris_a_CXXFLAGS) $(CXXFLAGS) -c -o libIris_a-genericTracePktGen.o `test -f 'components/impl/genericTracePktGen.cc' || echo '$(srcdir)/'`components/impl/genericTracePktGen.cc

libIris_a-genericTracePktGen.obj: components/impl/genericTracePktGen.cc
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libIris_a_CXXFLAGS) $(CXXFLAGS) -MT libIris_a-genericTracePktGen.obj -MD -MP -MF "$(DEPDIR)/libIris_a-genericTracePktGen.Tpo" -c -o libIris_a-genericTracePktGen.obj `if test -f 'components/impl/genericTracePktGen.cc'; then $(CYGPATH_W) 'components/impl/genericTracePktGen.cc'; else $(CYGPATH_W) '$(srcdir)/components/impl/genericTracePktGen.cc'; fi`; \
	then mv -f "$(DEPDIR)/libIris_a-genericTracePktGen.Tpo" "$(DEPDIR)/libIris_a-genericTracePktGen.Po"; else rm -f "$(DEPDIR)/libIris_a-genericTracePktGen.Tpo"; exit 1; fi
#	source='components/impl/genericTracePktGen.cc' object='libIris_a-genericTracePktGen.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libIris_a_CXXFLAGS) $(CXXFLAGS) -c -o libIris_a-genericTracePktGen.obj `if test -f 'components/impl/genericTracePktGen.cc'; then $(CYGPATH_W) 'components/impl/genericTracePktGen.cc'; else $(CYGPATH_W) '$(srcdir)/components/impl/genericTracePktGen.cc'; fi`

libIris_a-genericVcAllocator.o: components/impl/genericVcAllocator.cc
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libIris_a_CXXFLAGS) $(CXXFLAGS) -MT libIris_a-genericVcAllocator.o -MD -MP -MF "$(DEPDIR)/libIris_a-genericVcAllocator.Tpo" -c -o libIris_a-genericVcAllocator.o `test -f 'components/impl/genericVcAllocator.cc' || echo '$(srcdir)/'`components/impl/genericVcAllocator.cc; \
	then mv -f "$(DEPDIR)/libIris_a-genericVcAllocator.Tpo" "$(DEPDIR)/libIris_a-genericVcAllocator.Po"; else rm -f "$(DEPDIR)/libIris_a-genericVcAllocator.Tpo"; exit 1; fi
#	source='components/impl/genericVcAllocator.cc' object='libIris_a-genericVcAllocator.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libIris_a_CXXFLAGS) $(CXXFLAGS) -c -o libIris_a-genericVcAllocator.o `test -f 'components/impl/genericVcAllocator.cc' || echo '$(srcdir)/'`components/impl/genericVcAllocator.cc

libIris_a-genericVcAllocator.obj: components/impl/genericVcAllocator.cc
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libIris_a_CXXFLAGS) $(CXXFLAGS) -MT libIris_a-genericVcAllocator.obj -MD -MP -MF "$(DEPDIR)/libIris_a-genericVcAllocator.Tpo" -c -o libIris_a-genericVcAllocator.obj `if test -f 'components/impl/genericVcAllocator.cc'; then $(CYGPATH_W) 'components/impl/genericVcAllocator.cc'; else $(CYGPATH_W) '$(srcdir)/components/impl/genericVcAllocator.cc'; fi`; \
	then mv -f "$(DEPDIR)/libIris_a-genericVcAllocator.Tpo" "$(DEPDIR)/libIris_a-genericVcAllocator.Po"; else rm -f "$(DEPDIR)/libIris_a-genericVcAllocator.Tpo"; exit 1; fi
#	source='components/impl/genericVcAllocator.cc' object='libIris_a-genericVcAllocator.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libIris_a_CXXFLAGS) $(CXXFLAGS) -c -o libIris_a-genericVcAllocator.obj `if test -f 'components/impl/genericVcAllocator.cc'; then $(CYGPATH_W) 'components/impl/genericVcAllocator.cc'; else $(CYGPATH_W) '$(srcdir)/components/impl/genericVcAllocator.cc'; fi`

libIris_a-genericFlatMc.o: components/impl/genericFlatMc.cc
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libIris_a_CXXFLAGS) $(CXXFLAGS) -MT libIris_a-genericFlatMc.o -MD -MP -MF "$(DEPDIR)/libIris_a-genericFlatMc.Tpo" -c -o libIris_a-genericFlatMc.o `test -f 'components/impl/genericFlatMc.cc' || echo '$(srcdir)/'`components/impl/genericFlatMc.cc; \
	then mv -f "$(DEPDIR)/libIris_a-genericFlatMc.Tpo" "$(DEPDIR)/libIris_a-genericFlatMc.Po"; else rm -f "$(DEPDIR)/libIris_a-genericFlatMc.Tpo"; exit 1; fi
#	source='components/impl/genericFlatMc.cc' object='libIris_a-genericFlatMc.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libIris_a_CXXFLAGS) $(CXXFLAGS) -c -o libIris_a-genericFlatMc.o `test -f 'components/impl/genericFlatMc.cc' || echo '$(srcdir)/'`components/impl/genericFlatMc.cc

libIris_a-genericFlatMc.obj: components/impl/genericFlatMc.cc
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libIris_a_CXXFLAGS) $(CXXFLAGS) -MT libIris_a-genericFlatMc.obj -MD -MP -MF "$(DEPDIR)/libIris_a-genericFlatMc.Tpo" -c -o libIris_a-genericFlatMc.obj `if test -f 'components/impl/genericFlatMc.cc'; then $(CYGPATH_W) 'components/impl/genericFlatMc.cc'; else $(CYGPATH_W) '$(srcdir)/components/impl/genericFlatMc.cc'; fi`; \
	then mv -f "$(DEPDIR)/libIris_a-genericFlatMc.Tpo" "$(DEPDIR)/libIris_a-genericFlatMc.Po"; else rm -f "$(DEPDIR)/libIris_a-genericFlatMc.Tpo"; exit 1; fi
#	source='components/impl/genericFlatMc.cc' object='libIris_a-genericFlatMc.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libIris_a_CXXFLAGS) $(CXXFLAGS) -c -o libIris_a-genericFlatMc.obj `if test -f 'components/impl/genericFlatMc.cc'; then $(CYGPATH_W) 'components/impl/genericFlatMc.cc'; else $(CYGPATH_W) '$(srcdir)/components/impl/genericFlatMc.cc'; fi`

libIris_a-memctrlFE.o: components/impl/memctrlFE.cc
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libIris_a_CXXFLAGS) $(CXXFLAGS) -MT libIris_a-memctrlFE.o -MD -MP -MF "$(DEPDIR)/libIris_a-memctrlFE.Tpo" -c -o libIris_a-memctrlFE.o `test -f 'components/impl/memctrlFE.cc' || echo '$(srcdir)/'`components/impl/memctrlFE.cc; \
	then mv -f "$(DEPDIR)/libIris_a-memctrlFE.Tpo" "$(DEPDIR)/libIris_a-memctrlFE.Po"; else rm -f "$(DEPDIR)/libIris_a-memctrlFE.Tpo"; exit 1; fi
#	source='components/impl/memctrlFE.cc' object='libIris_a-memctrlFE.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libIris_a_CXXFLAGS) $(CXXFLAGS) -c -o libIris_a-memctrlFE.o `test -f 'components/impl/memctrlFE.cc' || echo '$(srcdir)/'`components/impl/memctrlFE.cc

libIris_a-memctrlFE.obj: components/impl/memctrlFE.cc
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libIris_a_CXXFLAGS) $(CXXFLAGS) -MT libIris_a-memctrlFE.obj -MD -MP -MF "$(DEPDIR)/libIris_a-memctrlFE.Tpo" -c -o libIris_a-memctrlFE.obj `if test -f 'components/impl/memctrlFE.cc'; then $(CYGPATH_W) 'components/impl/memctrlFE.cc'; else $(CYGPATH_W) '$(srcdir)/components/impl/memctrlFE.cc'; fi`; \
	then mv -f "$(DEPDIR)/libIris_a-memctrlFE.Tpo" "$(DEPDIR)/libIris_a-memctrlFE.Po"; else rm -f "$(DEPDIR)/libIris_a-memctrlFE.Tpo"; exit 1; fi
#	source='components/impl/memctrlFE.cc' object='libIris_a-memctrlFE.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libIris_a_CXXFLAGS) $(CXXFLAGS) -c -o libIris_a-memctrlFE.obj `if test -f 'components/impl/memctrlFE.cc'; then $(CYGPATH_W) 'components/impl/memctrlFE.cc'; else $(CYGPATH_W) '$(srcdir)/components/impl/memctrlFE.cc'; fi`
uninstall-info-am:

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
	list='$(DISTFILES)'; for file in $$list; do \
	  case $$file in \
	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
	  esac; \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkdir_p) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LIBRARIES) $(HEADERS)
installdirs:
	for dir in "$(DESTDIR)$(libdir)"; do \
	  test -z "$$dir" || $(mkdir_p) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-libLIBRARIES mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

info: info-am

info-am:

install-data-am:

install-exec-am: install-libLIBRARIES

install-info: install-info-am

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-info-am uninstall-libLIBRARIES

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-generic \
	clean-libLIBRARIES ctags distclean distclean-compile \
	distclean-generic distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-data \
	install-data-am install-exec install-exec-am install-info \
	install-info-am install-libLIBRARIES install-man install-strip \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic pdf pdf-am ps ps-am tags uninstall \
	uninstall-am uninstall-info-am uninstall-libLIBRARIES

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
